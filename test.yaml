version: 3
services:
  orion:
    image: 'fiware/orion:${ORION_VERSION:-2.0.0}'
    port: '- "1026:1026"'
    comands: '-logLevel DEBUG -noCache -dbhost mongo'
    depends_on: '- mongo'
    ' healthcheck':
      test: '["CMD", "curl", "-f", "http://0.0.0.0:1026/version"]'
      interval: 1m
      timeout: 10s
      retries: 3
  iot-agent:
    image: 'fiware/iotagent-ul:latest'
    hostname: iot-agent
    container_name: fiware-iot-agent
    depends_on: mongo-db
    networks: '- default'
    expose:
      - '4041'
      - '7896'
    ports: '- "4041:4041"'
    0: '- "7896:7896"'
    environment: '- IOTA_CB_HOST=orion'
    1: '- IOTA_CB_PORT=1026'
    2: '- IOTA_NORTH_PORT=4041'
    3: '- IOTA_REGISTRY_TYPE=mongodb'
    4: '- IOTA_LOG_LEVEL=DEBUG'
    5: '- IOTA_TIMESTAMP=true'
    6: '- IOTA_CB_NGSI_VERSION=v2'
    7: '- IOTA_AUTOCAST=true'
    8: '- IOTA_MONGO_HOST=mongo-db'
    9: '- IOTA_MONGO_PORT=27017'
    10: '- IOTA_MONGO_DB=iotagentul'
    11: '- IOTA_HTTP_PORT=7896'
    12: '- IOTA_PROVIDER_URL=http://iot-agent:4041'
  quantumleap:
    image: '${QL_IMAGE:-smartsdk/quantumleap}'
    ports: ' - "8668:8668"'
    'depends_on:': '- mongo'
    0: '- orion'
    1: '- create'
    'enviroment:': '- CRATE_HOST=${CRATE_HOST:-crate}'
    2: '- USE_GEOCODING=True'
    3: '- REDIS_HOST=redis'
    4: '- REDIS_PORT=6379'
    5: '- LOGLEVEL=DEBUG'
  mongo:
    image: 'mongo:3.2.19'
    ports: '- "27017:27017"'
    volumes: '- mongodata:/data/db'
  create:
    image: ' crate:${CRATE_VERSION:-4.1.4}'
    commands: 'crate -Cauth.host_based.enabled=false'
    0: '-Ccluster.name=democluster -Chttp.cors.enabled=true -Chttp.cors.allow-origin="*"'
    ports: '# Admin UI'
    1: '- "4200:4200"'
    2: '# Transport protocol'
    3: '- "4300:4300"'
    volumes: ' - cratedata:/data'
  grafana:
    image: grafana/grafana
    ports: '- "3000:3000"'
    enviroment: '- GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-worldmap-panel'
    depends_on: '- crate'
  redis:
    image: redis
    ports: '- "6379:6379"'
    volumes: '- redisdata:/data'
volumes:
  mongodata: ''
  createdata: ''
  redisdata: ''
networks:
  default:
    driver_opts:
      com.docker.network.driver.mtu: '${DOCKER_MTU:-1400}'
